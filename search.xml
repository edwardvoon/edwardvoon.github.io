<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>npm命令汇总整理</title>
    <url>/posts/5d21f14b.html</url>
    <content><![CDATA[<p>&emsp;&emsp;npm是JavaScript世界的包管理工具,并且是 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuLw==">NodeJs<i class="fa fa-external-link-alt"></i></span> 平台的默认包管理工具。来自各大洲的开源开发人员都使用npm共享和借用软件包，许多组织也使用npm来管理私人开发。</p>
<span id="more"></span>

<ul>
<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li>
<li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li>
<li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<br/></li>
</ul>
<p>&emsp;&emsp;使用该<span class="exturl" data-url="aHR0cHM6Ly9ucG1qcy5jb20v">网站<i class="fa fa-external-link-alt"></i></span>发现软件包，设置配置文件以及管理您的npm体验的其他方面。例如，您可以设置<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL2ZlYXR1cmVz">组织<i class="fa fa-external-link-alt"></i></span>来管理对公共或私有软件包的访问。</p>
<blockquote>
<p>如果你的电脑上没有nodejs,可以访问nodejs官网下载<a href="">安装并配置</a>。</p>
</blockquote>
<h3 id="查看npm版本"><a href="#查看npm版本" class="headerlink" title="查看npm版本"></a>查看<code>npm</code>版本</h3><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> init</span><br></pre></td></tr></table></figure>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> -v </span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac OS安装Python3整理</title>
    <url>/posts/be5d852.html</url>
    <content><![CDATA[<p>&emsp;&emsp;Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。</p>
<p>&emsp;&emsp;Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。</p>
<span id="more"></span>

<ul>
<li><p>Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。</p>
</li>
<li><p>Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 &gt;&gt;&gt; 后直接执行代码。</p>
</li>
<li><p>Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。</p>
</li>
</ul>
<p>&emsp;&emsp;Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。</p>
<p>&emsp;&emsp;最新版本的Mac OS X，High Sierra， 自带Python 2.7。</p>
<p>&emsp;&emsp;您不必安装和配置即可直接使用Python 2。本教程用来说明Python 3的安装。</p>
<p>&emsp;&emsp;OS X自带的Python版本更适合用于学习而不是开发。因为版本与Python官网发布的 官方最新稳定版本 相比可能已经过时。</p>
<h1 id="Let-s-do-it"><a href="#Let-s-do-it" class="headerlink" title="Let`s do it"></a>Let`s do it</h1><p>&emsp;&emsp;在正式安装之前，应先安装C编译器。最快的方式是运行 <code>xcode-select --install</code> 来安装Xcode命令行工具。 您也可以从Mac应用商店下载完全版的 <span class="exturl" data-url="aHR0cDovL2RldmVsb3Blci5hcHBsZS5jb20veGNvZGUv">Xcode<i class="fa fa-external-link-alt"></i></span>， 或者更轻巧的 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tlbm5ldGhyZWl0ei9vc3gtZ2NjLWluc3RhbGxlciNyZWFkbWU=">OSX-GCC-Installer<i class="fa fa-external-link-alt"></i></span> 。</p>
<div class="note info"><p> 注意<br><strong>如果</strong>已经安装了Xcode，请不要再安装 OSX-GCC-Installer。两者结合可能会引发难以诊断的问题。</p>
</div>

<div class="note info"><p> 注意<br><strong>执行</strong>Xcode的全新安装完成后，须在终端执行下述命令 xcode-select –install 来安装命令行工具。</p>
</div>

<h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>&emsp;&emsp;尽管OS X系统附带了大量Unix工具，熟悉Linux系统的人员使用时会发现缺少一个重要的组件——合适的包管理工具， <span class="exturl" data-url="aHR0cDovL2JyZXcuc2gv">Homebrew<i class="fa fa-external-link-alt"></i></span> 正好填补了这个空缺。</p>
<p>&emsp;&emsp;<span class="exturl" data-url="aHR0cDovL2JyZXcuc2gvI2luc3RhbGw=">安装Homebrew<i class="fa fa-external-link-alt"></i></span>只需打开 终端 或个人常用的终端模拟器并运行：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/ruby -e &quot;$(curl -fsSL https:/</span><span class="regexp">/raw.githubusercontent.com/</span>Homebrew<span class="regexp">/install/m</span>aster/install)<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="配置Homebrew"><a href="#配置Homebrew" class="headerlink" title="配置Homebrew"></a>配置Homebrew</h2><p>&emsp;&emsp;运行这段脚本将列出它会引起的改变，并在安装开始前提示您。 安装完成Homebrew后，需将其所在路径插入到 PATH 环境变量的最前面，即在您所登录用户的 ~/.profile 文件末尾加上这一行：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="string">&quot;/usr/local/opt/python/libexec/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;如果您使用的是 OS X 10.12（Sierra）或者更旧的系统，请使用如下命令</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">export PATH=<span class="regexp">/usr/</span>local<span class="regexp">/bin:/u</span>sr<span class="regexp">/local/</span>sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h2 id="安装Python3"><a href="#安装Python3" class="headerlink" title="安装Python3"></a>安装Python3</h2><p>&emsp;&emsp;接下来可以开始安装Python 3：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>python</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;这将持续几分钟,然后，enjoy coding!</p>
<h1 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h1><p>Homebrew 会为您安装 <code>pip3</code> </p>
<p><code>pip3</code> 是Homebrew版Python 3的 <code>pip</code> 的别名。</p>
<h1 id="使用Python-3"><a href="#使用Python-3" class="headerlink" title="使用Python 3"></a>使用Python 3</h1><p>这个时候，在您系统上Python 2.7是可用的。<span class="exturl" data-url="aHR0cHM6Ly9weXRob25ndWlkZWNuLnJlYWR0aGVkb2NzLmlvL3poL2xhdGVzdC9zdGFydGluZy9pbnN0YWxsL29zeC5odG1sI2luc3RhbGwtb3N4">Homebrew 版本的Python 2<i class="fa fa-external-link-alt"></i></span> 和Python 3都安装了。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span></span><br></pre></td></tr></table></figure>

<p>在终端输入上面的命令，将打开通过HomeBrew安装的Python解释器。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">pytho<span class="symbol">n2</span></span><br></pre></td></tr></table></figure>

<p>在终端输入上面的命令，将会打开使用Homebrew安装的Python 2解释器（如果有）。</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">pytho<span class="symbol">n3</span></span><br></pre></td></tr></table></figure>

<p>在终端输入上面的命令，将会打开使用Homebrew安装的Python 3解释器（如果有）。</p>
<p>如果Homebrew版的Python 2安装了，<code>pip2</code> 指向Python 2。 如果Homebrew版的Python 3安装了，pip 指向Python 3。</p>
<p>本指南的其余部分假定 python 指 Python 3。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我安装Python 3了吗？</span></span><br><span class="line"><span class="attribute">python</span> --version</span><br><span class="line"><span class="attribute">Python</span> <span class="number">3</span>.<span class="number">6</span>.<span class="number">4</span> Success!</span><br><span class="line"><span class="comment"># If you still see 2.7 ensure in PATH /usr/local/bin/ takes pecedence over /usr/bin/</span></span><br></pre></td></tr></table></figure>

<h1 id="Pipenv-amp-虚拟环境"><a href="#Pipenv-amp-虚拟环境" class="headerlink" title="Pipenv &amp; 虚拟环境"></a>Pipenv &amp; 虚拟环境</h1><p>下一步安装 Pipenv，然后就可以安装依赖关系并管理虚拟环境。</p>
<p>虚拟环境工具通过为不同项目创建专属的 Python 虚拟环境，以实现其依赖的库独立保存在不同的路径。 这解决了“项目X依赖于 1.x 版本，但项目 Y 需要 4.x”的难题，并且维持全局的 site-packages 目录干净、易管理。</p>
<p>举个例子，通过这个工具可以实现依赖 Django 1.10 的项目与依赖 Django 1.8 的项目共存。</p>
<p>所以，向前！<del><a href="#">进入到 Pipenv &amp; 虚拟环境</a></del> 文档中！</p>
]]></content>
  </entry>
</search>
